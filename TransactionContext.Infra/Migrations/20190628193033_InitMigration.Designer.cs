// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransactionContext.Infra;

namespace TransactionContext.Infra.Migrations
{
    [DbContext(typeof(TransactionAccountContext))]
    [Migration("20190628193033_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TransactionContext.Domain.Entities.Account", b =>
                {
                    b.Property<Guid>("ID");

                    b.Property<string>("Agency");

                    b.Property<decimal>("Balance");

                    b.Property<Guid?>("CustomerID");

                    b.Property<string>("Number");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("TransactionContext.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("ID");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("TransactionContext.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<Guid>("DestinationAccountID");

                    b.Property<Guid>("OriginAccountID");

                    b.HasKey("ID");

                    b.HasIndex("DestinationAccountID");

                    b.HasIndex("OriginAccountID");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("TransactionContext.Domain.Entities.Account", b =>
                {
                    b.HasOne("TransactionContext.Domain.Entities.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("TransactionContext.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("TransactionContext.Domain.Entities.Account", "DestinationAccount")
                        .WithMany("DestinationTransactions")
                        .HasForeignKey("DestinationAccountID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TransactionContext.Domain.Entities.Account", "OriginAccount")
                        .WithMany("OriginTransactions")
                        .HasForeignKey("OriginAccountID")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
